{"version":3,"sources":["n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/super-input/SuperInput.module.css","n3-utils/u1-error/Error.module.css","n1-main/m1-ui/common/super-button/SuperButton.module.css","n1-main/m1-ui/common/super-checkbox/SuperCheckbox.module.css","n1-main/m1-ui/common/super-radio/SuperRadio.module.css","n2-features/f1-auth/a1-login/Login.module.css","n1-main/m3-dal/api.ts","n2-features/f1-auth/a1-login/auth-reducer.ts","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-registration/register-reducer.ts","n2-features/f1-auth/a2-registration/Registration.tsx","n2-features/f1-auth/a3-recovery-password/recovery-reducer.ts","n2-features/f1-auth/a3-recovery-password/RecoveryPassword.tsx","n2-features/f1-auth/a4-enter-new-password/EnterNewPassword.tsx","n3-utils/u1-error/Error.tsx","n1-main/m1-ui/common/super-button/SuperButton.tsx","n1-main/m1-ui/common/super-input/SuperInput.tsx","n1-main/m1-ui/common/super-checkbox/SuperCheckbox.tsx","n1-main/m1-ui/common/super-radio/SuperRadio.tsx","n1-main/m1-ui/test-page/Tests.tsx","n1-main/m1-ui/profile/profile-reducer.ts","n1-main/m1-ui/profile/Profile.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m2-bll/store.ts","n1-main/m1-ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","forgotMessage","API","email","password","rememberMe","post","then","response","data","delete","from","message","initialState","userData","_id","avatar","name","publicCardPacksCount","isLoggedIn","loginError","setIsLoggedIn","type","Login","dispatch","useDispatch","useSelector","state","auth","useState","setEmail","setPassword","setRememberMe","to","PATH","PROFILE","onChange","event","currentTarget","value","checked","onClick","catch","e","error","loginTC","className","styles","Registration","isRegistration","register","LOGIN","style","registrationContainer","formBlock","placeholder","alert","console","log","registerTC","RecoveryPassword","restoredPassword","setRestoredPassword","forgot","isForgotPassword","ENTER_NEW_PASSWORD","isForgot","EnterNewPassword","Error","errorCat","item","SuperButton","red","restProps","finalClassName","s","default","SuperInput","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInputError","errorInput","superInput","key","SuperCheckbox","onChangeChecked","children","checkbox","SuperRadio","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","inputRadio","inputText","TestPage","Profile","REGISTRATION","RECOVERY_PASSWORD","TEST_PAGE","Routes","path","render","Header","headerContainer","navBlock","activeClassName","active","reducer","combineReducers","profile","action","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e6382dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__uS4YK\",\"navBlock\":\"Header_navBlock__3nd5j\",\"active\":\"Header_active__2gtFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__1H0Ml\",\"errorInput\":\"SuperInput_errorInput__umUNx\",\"error\":\"SuperInput_error__nPOYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__25FxY\",\"errorCat\":\"Error_errorCat__3DLWz\",\"item\":\"Error_item__VFFfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3X9xY\",\"red\":\"SuperButton_red__3duho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__RXqEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputRadio\":\"SuperRadio_inputRadio__3dkL3\",\"inputText\":\"SuperRadio_inputText__39qJ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginError\":\"Login_loginError__2vEe2\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n//types\r\ntype LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    rememberMe: boolean,\r\n    isAdmin: boolean,\r\n    name: string\r\n    verified: boolean,\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    token: string\r\n    tokenDeathTime: number\r\n    avatar: string\r\n    error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n    error?: string\r\n    email?: string\r\n    in?: string\r\n    isEmailValid?: boolean\r\n    isPassValid?: boolean\r\n    emailRegExp?: {},\r\n    passwordRegExp?: string\r\n    addedUser: AddedUserType\r\n}\r\n\r\ntype ChangeProfileResponseType = {\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n//не поняла, почему его не надо типизировать, если он приходит...\r\ntype AddedUserType = {\r\n    _id: string\r\n    email: string\r\n    rememberMe: boolean\r\n    isAdmin: boolean\r\n    name: string\r\n    verified: boolean\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\nconst forgotMessage = `<div style=\"font-size: 1.2em; font-family: Calibri,sans-serif\">For password recovery click: <a href='http://localhost:3000/#/enter_new_password$token$'>here</a></div>`\r\n\r\n\r\nexport const API = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    register(email: string, password: string,) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password})\r\n            .then(response => response.data)\r\n    },\r\n    authMe() {\r\n        return instance.post<LoginResponseType>('auth/me', {})\r\n            .then(response => response.data)\r\n    },\r\n    changeProfile(name?: string, avatar?: string) {\r\n        return instance.put<ChangeProfileResponseType>('auth/me', {name, avatar})\r\n            .then(response => response.data.updatedUser)\r\n    },\r\n    logout() {\r\n        return instance.delete<{ info: string, error?: string }>('auth/me')\r\n            .then(response => response.data)\r\n    },\r\n    forgotPassword(email: string, from: string = 'test-front-dev <shishkina_veronika_10@mail.ru>', message: string = forgotMessage) {\r\n        return instance.post<{ info: string, error?: string }>('auth/forgot', {email, from, message})\r\n            .then(response => response.data)\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<{ info: string, error?: string }>('auth/set-new-password', {password, resetPasswordToken})\r\n            .then(response => response.data)\r\n    }\r\n}","import {Dispatch} from 'redux';\r\nimport {API} from '../../../n1-main/m3-dal/api';\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setLoginData>\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setLoginError>\r\n\r\ntype UserDataType = {\r\n    email: string | null,\r\n    _id: string | null,\r\n    avatar: string | null,\r\n    name: string | null,\r\n    publicCardPacksCount: number\r\n}\r\n\r\ntype InitialStateType = { userData: UserDataType, isLoggedIn: boolean, loginError: null | string }\r\n\r\n\r\nconst initialState = {\r\n    userData: {\r\n        email: null,\r\n        _id: null,\r\n        avatar: null,\r\n        name: null,\r\n        publicCardPacksCount: 0,\r\n    },\r\n    isLoggedIn: false,\r\n    loginError: null\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'auth/SET-USER-DATA': {\r\n            return {...state, ...action.data}\r\n        }\r\n        case 'auth/SET-IS-LOGGED-IN': {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case 'auth/SET-LOGIN-ERROR': {\r\n            return {...state, loginError: action.loginError}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setLoginData = (data: UserDataType) => ({type: 'auth/SET-USER-DATA', data} as const)\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({type: 'auth/SET-IS-LOGGED-IN', isLoggedIn} as const)\r\nexport const setLoginError = (loginError: string) => ({type: 'auth/SET-LOGIN-ERROR', loginError} as const)\r\n\r\n//thunks\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n    API.login(email, password, rememberMe)\r\n        .then(response => {\r\n            const {email, _id, avatar, name, publicCardPacksCount} = response;\r\n            dispatch(setLoginData({email, _id, avatar, name, publicCardPacksCount}));\r\n            dispatch(setIsLoggedIn(true));\r\n        })\r\n        .catch(e => {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            dispatch(setLoginError(error));\r\n        })\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {loginTC} from './auth-reducer';\r\nimport {AppRootStateType} from '../../../n1-main/m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../n1-main/m1-ui/routes/Routes';\r\nimport styles from './Login.module.css';\r\n\r\nconst Login: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const loginError = useSelector<AppRootStateType, string | null>(state => state.auth.loginError);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n\r\n    const onLoginFormSubmitHandler = () => {\r\n        dispatch(loginTC(email, password, rememberMe));\r\n    }\r\n\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value);\r\n    }\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value);\r\n    }\r\n    const onRememberMeChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    return (\r\n        <div>\r\n            Login\r\n            <form>\r\n                <div>\r\n                    <input type=\"text\" onChange={onEmailChangeHandler}/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"password\" onChange={onPasswordChangeHandler}/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"checkbox\" onChange={onRememberMeChangeHandler}/>\r\n                    Remember me\r\n                </div>\r\n                <button type={'submit'} onClick={onLoginFormSubmitHandler}>log in</button>\r\n            </form>\r\n            {loginError ? <div className={styles.loginError}>{loginError}</div> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {Dispatch} from \"redux\";\r\nimport {API} from \"../../../n1-main/m3-dal/api\";\r\n\r\ntype ActionsType = ReturnType<typeof setIsRegistrationDataAC>\r\n\r\ntype RegisterType = {\r\n    isRegistration: boolean\r\n}\r\n\r\nconst initialState = {} as RegisterType\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"REGISTER/SET-IS-REGISTRATION-DATA\":\r\n            return {\r\n                ...state,\r\n                isRegistration: action.isRegistration\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setIsRegistrationDataAC = (isRegistration: boolean) =>\r\n    ({type: \"REGISTER/SET-IS-REGISTRATION-DATA\", isRegistration} as const)\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    API.register(email, password)\r\n        .then(() => {\r\n            dispatch(setIsRegistrationDataAC(true))\r\n        })\r\n        .catch(response => {\r\n            console.log(response.error)\r\n        })\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC} from \"./register-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport style from \"./Registration.module.css\"\r\n\r\nconst Registration: React.FC = () => {\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.register.isRegistration)\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onRegistrationHandler = () => {\r\n        if (password === \"\" || email === \"\") {\r\n            alert(\"Field is required\")\r\n        } else {\r\n            dispatch(registerTC(email, password))\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n        }\r\n    }\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.registrationContainer}>\r\n            <h1>Registration: </h1>\r\n            <form className={style.formBlock}>\r\n                <div>\r\n                    <span>Email: </span><input placeholder=\"Enter email...\" type=\"email\" value={email}\r\n                                               onChange={onChangeEmailHandler}/>\r\n                </div>\r\n                <div>\r\n                    <span>Password: </span><input placeholder=\"Enter password...\" type=\"password\" value={password}\r\n                                                  onChange={onChangePasswordHandler}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick={onRegistrationHandler}>Register</button>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <NavLink to={PATH.LOGIN}>login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration","import {API} from \"../../../n1-main/m3-dal/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype ActionsType = any\r\n\r\ntype RecoveryType = {\r\n    isForgotPassword: boolean\r\n}\r\n\r\nconst initialState = {} as RecoveryType\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setIsForgotPasswordAC = (isForgot: boolean) =>\r\n    ({type: \"RECOVERY/SET-IS-FORGOT-PASSWORD\", isForgot})\r\n\r\nexport const forgotPasswordTC = (email: string) => (dispatch: Dispatch) => {\r\n    API.forgotPassword(email)\r\n        .then(() => {\r\n            dispatch(setIsForgotPasswordAC(true))\r\n        })\r\n        .catch(response=>{\r\n            console.log(response.error)\r\n        })\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"./recovery-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nconst RecoveryPassword: React.FC = () => {\r\n\r\n    const [restoredPassword, setRestoredPassword] = useState<string>(\"\")\r\n    const dispatch = useDispatch()\r\n    const isForgotPassword = useSelector<AppRootStateType, boolean>(state => state.forgot.isForgotPassword)\r\n\r\n    const onChangeRestoredPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRestoredPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onRestoredPasswordHandler = () => {\r\n        dispatch(forgotPasswordTC(restoredPassword))\r\n    }\r\n\r\n    if (isForgotPassword) {\r\n        return <Redirect to={PATH.ENTER_NEW_PASSWORD}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <span>Email: </span><input placeholder=\"Enter email...\" type=\"email\" value={restoredPassword}\r\n                                           onChange={onChangeRestoredPasswordHandler}/>\r\n                <div>\r\n                    <button type=\"submit\" onClick={onRestoredPasswordHandler}>Send</button>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <NavLink to={PATH.LOGIN}>login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecoveryPassword","import React from \"react\";\r\n\r\nconst EnterNewPassword: React.FC = () => {\r\n    return (\r\n        <div>\r\n            enter new password\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterNewPassword","import React from \"react\";\r\nimport style from \"./Error.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\n\r\nconst Error: React.FC = () => {\r\n    return (\r\n        <div className={style.error}>\r\n            <div>ERROR 404</div>\r\n            <div>The cat couldn't find a page!</div>\r\n            <div className={style.errorCat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            <nav>\r\n                <div className={style.item}>\r\n                    <NavLink to={PATH.PROFILE}>go home</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        >button</button>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    supperInputClassName?: string\r\n};\r\n\r\nconst SuperInput: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\"\r\n        && onEnter\r\n        && onEnter();\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n\r\n    const finalInputClassName = `${s.errorInputError} ${error ? s.errorInput : s.superInput} `;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInput;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperRadio.module.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i} className={s.inputRadio}>\r\n            <input\r\n                type={\"radio\"}\r\n                onChange={onChangeCallback}\r\n                name={name}\r\n                {...restProps}\r\n            />\r\n            <span className={s.inputText}>{o}</span>\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React from \"react\";\r\nimport SuperButton from \"../common/super-button/SuperButton\";\r\nimport SuperInput from \"../common/super-input/SuperInput\";\r\nimport SuperCheckbox from \"../common/super-checkbox/SuperCheckbox\";\r\nimport SuperRadio from \"../common/super-radio/SuperRadio\";\r\n\r\nconst TestPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <SuperButton/>\r\n            <SuperInput/>\r\n            <SuperCheckbox/>\r\n            <SuperRadio/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestPage","import {Dispatch} from 'redux';\r\nimport {API} from '../../m3-dal/api';\r\nimport {setIsLoggedIn} from '../../../n2-features/f1-auth/a1-login/auth-reducer';\r\n\r\ntype ActionsType = any\r\n\r\nconst initialState = {}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunks\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    API.logout()\r\n        .then(response => {\r\n            dispatch(setIsLoggedIn(false));\r\n        })\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {logOutTC} from './profile-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../routes/Routes';\r\n\r\nconst Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n\r\n    const onLogOutHandler = () => {\r\n        dispatch(logOutTC());\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Profile\r\n            <br/>\r\n            <button onClick={onLogOutHandler}>Log out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport Registration from \"../../../n2-features/f1-auth/a2-registration/Registration\";\r\nimport RecoveryPassword from \"../../../n2-features/f1-auth/a3-recovery-password/RecoveryPassword\";\r\nimport EnterNewPassword from \"../../../n2-features/f1-auth/a4-enter-new-password/EnterNewPassword\";\r\nimport Error from \"../../../n3-utils/u1-error/Error\";\r\nimport TestPage from \"../test-page/Tests\";\r\nimport Profile from \"../profile/Profile\";\r\n\r\nexport const PATH = {\r\n    PROFILE: \"/profile\",\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: \"/registration\",\r\n    RECOVERY_PASSWORD: \"/recovery_password\",\r\n    ENTER_NEW_PASSWORD: \"/enter_new_password\",\r\n    TEST_PAGE: \"/test_page\",\r\n}\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={PATH.ENTER_NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage/>}/>\r\n                <Route render={() => <Error/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../routes/Routes\";\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div className={style.headerContainer}>\r\n            <nav className={style.navBlock}>\r\n                <div>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={style.active}>Profile</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={style.active}>login</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.REGISTRATION} activeClassName={style.active}>Registration</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.RECOVERY_PASSWORD} activeClassName={style.active}>Recovery password</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.ENTER_NEW_PASSWORD} activeClassName={style.active}>Enter new password</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.TEST_PAGE} activeClassName={style.active}>Test page</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"../m1-ui/profile/profile-reducer\";\r\nimport {authReducer} from \"../../n2-features/f1-auth/a1-login/auth-reducer\";\r\nimport {registerReducer} from \"../../n2-features/f1-auth/a2-registration/register-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {recoveryReducer} from \"../../n2-features/f1-auth/a3-recovery-password/recovery-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    profile: profileReducer,\r\n    auth: authReducer,\r\n    register: registerReducer,\r\n    forgot: recoveryReducer\r\n\r\n})\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>","import React from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './header/Header';\r\nimport Routes from \"./routes/Routes\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"../m2-bll/store\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <div className=\"App\">\r\n                    <Header/>\r\n                    <Routes/>\r\n                </div>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}